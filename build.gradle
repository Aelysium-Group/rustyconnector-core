buildscript {
    repositories {
        gradlePluginPortal()
    }
    dependencies {
        classpath 'com.gradleup.shadow:shadow-gradle-plugin:9.0.0-beta4'
    }
}

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'com.gradleup.shadow'

group = project.maven_group
version = project.version

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenCentral()
    maven { url = "https://repo.maven.apache.org/maven2/" }
    maven { url = "https://repo.papermc.io/repository/maven-public/" }
    maven { url = "https://hub.spigotmc.org/nexus/content/groups/public/" }
    maven { url = "https://oss.sonatype.org/content/groups/public/" }
    maven { url = "https://s01.oss.sonatype.org/content/repositories/snapshots/" }
    maven { url = "https://maven.mrnavastar.me/releases/" }
    maven { url = "https://repo.eclipse.org/content/groups/releases/" }
    maven { url = "https://repo.alessiodp.com/releases/" }
}

dependencies {
    // Kiori Adventure should be provided by the wrapper
    compileOnly 'net.kyori:adventure-api:4.17.0'
    compileOnly 'org.jetbrains:annotations:24.1.0'
    compileOnly 'org.incendo:cloud-core:2.0.0'
    compileOnly "org.incendo:cloud-annotations:2.0.0"

    shadow "group.aelysium:ara:2.0.5"
    shadow "group.aelysium:haze:0.0.11"
    shadow "group.aelysium:declarative-yaml:0.2.0"

    shadow 'com.aventrix.jnanoid:jnanoid:2.0.0'
    shadow 'com.google.code.gson:gson:2.11.0'

    shadow "io.javalin:javalin:6.5.0"
    shadow "com.fasterxml.jackson.core:jackson-databind:2.17.0"
    shadow "org.java-websocket:Java-WebSocket:1.5.7"
}

processResources {
    def props = ['version': version]
    inputs.properties props
    filteringCharset "UTF-8"

    filesMatching("rustyconnector-metadata.json") {
        expand props
    }
}

compileJava {
    options.encoding = "UTF-8"
}

javadoc {
    options.encoding = 'UTF-8'
}

shadowJar {
    archiveClassifier.set('')
    mergeServiceFiles()

    relocate 'org.reflections', 'group.aelysium.rustyconnector.shaded.org.reflections'

    relocate "group.aelysium.ara", 'group.aelysium.rustyconnector.shaded.group.aelysium.ara'
    relocate "group.aelysium.haze", 'group.aelysium.rustyconnector.shaded.group.aelysium.haze'
    relocate "group.aelysium.declarative_yaml", 'group.aelysium.rustyconnector.shaded.group.aelysium.declarative_yaml'

    relocate 'com.aventrix.jnanoid', 'group.aelysium.rustyconnector.shaded.com.aventrix.jnanoid.jnanoid'
    relocate 'com.google.gson', 'group.aelysium.rustyconnector.shaded.com.google.code.gson.gson'

    relocate "io.javalin", 'group.aelysium.rustyconnector.shaded.io.javalin'
    relocate "com.fasterxml.jackson.core", 'group.aelysium.rustyconnector.shaded.com.fasterxml.jackson.core.jackson_databind'
    relocate "org.java_websocket", 'group.aelysium.rustyconnector.shaded.org.java_websocket.Java_WebSocket'

    configurations = [project.configurations.shadow]
}

tasks.named('jar').configure {
    enabled = false
}
tasks.withType(JavaCompile) {
    options.compilerArgs += ['-Xdoclint:none']
}
tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
}

tasks.withType(Jar) {
    if (name == 'shadowJar') {
        archiveFileName.set("${archives_base_name}-${project.version}.jar")
    } else if (name == 'javadocJar') {
        archiveFileName.set("${archives_base_name}-${project.version}-javadoc.jar")
    } else if (name == 'sourcesJar') {
        archiveFileName.set("${archives_base_name}-${project.version}-sources.jar")
    }
}

jar.finalizedBy(shadowJar)