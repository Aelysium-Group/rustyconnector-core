#`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´#
#.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·.#
#>>>█>>>>>>>>>████>>>>>>>>>>>██>>>>>>>>>>>>>>█>>>>>>>>>>>>>>>███>>>>>>>>>>>>>█>>>>>>>>>>>██>>>>>>>>>█>>>#
#`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´#
#.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·.#
#         __    __    ______    ______    __    ______      __        __    __   __    __  __           #
#        /\ "-./  \  /\  __ \  /\  ___\  /\ \  /\  ___\    /\ \      /\ \  /\ "-.\ \  /\ \/ /           #
#        \ \ \-./\ \ \ \  __ \ \ \ \__ \ \ \ \ \ \ \____   \ \ \____ \ \ \ \ \ \-.  \ \ \  _"-.         #
#         \ \_\ \ \_\ \ \_\ \_\ \ \_____\ \ \_\ \ \_____\   \ \_____\ \ \_\ \ \_\\"\_\ \ \_\ \_\        #
#          \/_/  \/_/  \/_/\/_/  \/_____/  \/_/  \/_____/    \/_____/  \/_/  \/_/ \/_/  \/_/\/_/        #
#                                                                                                       #
#`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´#
#.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·.#
#<<<█<<<<<<<<<<██<<<<<<█<<<<<<<<██<<<<██<<<<<<███<<<<<<<<<<<<███<<<<<<<<<<<<<<<█████<<<<<<<<<<<<<<<<█<<<#
#`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´#
#.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·._.·´¯`·.#
#
# Magic Link is the connection backbone used by RustyConnector for handling connections between the
# Proxy and MCLoaders. It's sole directive is ensuring that all MCLoaders on the Proxy are
# active and ready to handle tasks.
#



#
# The provider to use for Magic Link solution.
#
provider: REDIS

available-providers:
    REDIS:
        host: "0.0.0.0"
        port: 3306
        user: "default"
        password: "password"
        data-channel: "rustyConnector-sync"



#
# Amount of time, in seconds, that an MCLoader can go without pinging the proxy.
# If an MCLoader doesn't ping the proxy in this time, it will be declared stale and be unregistered from the proxy.
#
timeout: 15



#
# Amount of time, in seconds, that an MCLoader should wait to ping the proxy.
# This setting cannot be higher than "server-timeout".
#
keep-alive-interval: 10



#
# The cache allows you to view messages after they've been received.
# This is helpful for debugging issues and seeing what's happening under the hood.
#
cache:
    #
    # The number of packets that will be saved into memory at any time.
    # As new packets are received, old packets will get pushed out of the cache.
    #
    # You can view cached messages using the `/rc message` command.
    #
    size: 100



    #
    # The packet types that should be ignored.
    # If a packet is of a type that is contained below, it will not be cached.
    #
    ignored-types: []



    #
    # The packet statuses to ignore.
    # If a packet matches a status listed below, it will not be cached.
    #
    ignored-statuses: []



logging:
    # Should we log when an MCLoader registers?
    registration: false

    # Should we log when an MCLoader unregisters?
    unregistration: false

    # Should we log when an MCLoader pings the proxy?
    ping: false

    # Should we log anytime the message parser throws away a message? (Can generate lots of console spam on busy servers!)
    message-parser-trash: false

    # Should we log when a message fails message tunnel validation?
    message-tunnel-failed-message: true